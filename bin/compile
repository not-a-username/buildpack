#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

# install leiningen jar
LEIN_VERSION="2.0.0-preview4"
LEIN_JAR_URL="https://heroku-buildpack-clojure.s3.amazonaws.com/leiningen-$LEIN_VERSION-standalone.jar"
LEIN_JAR_PATH="$CACHE_DIR/leiningen-$LEIN_VERSION-standalone.jar"

if [ ! -r "$LEIN_JAR_PATH" ]; then
  echo "-----> Installing Leiningen"
  echo "       Downloading: leiningen-$LEIN_VERSION-standalone.jar"
  mkdir -p $(dirname $LEIN_JAR_PATH)
  curl --silent --show-error --max-time 120 -L -o $LEIN_JAR_PATH $LEIN_JAR_URL
else
  echo "-----> Using cached Leiningen $LEIN_VERSION"
fi

mkdir -p "$BUILD_DIR/.lein"
cp "$LEIN_JAR_PATH" "$BUILD_DIR/.lein/leiningen-$LEIN_VERSION-standalone.jar"

# install lein script
LEIN_BIN_SOURCE="$(dirname $0)/../opt/lein"
LEIN_BIN_PATH=$BUILD_DIR"/.lein/bin/lein"
echo "       Writing: lein script"
mkdir -p $(dirname $LEIN_BIN_PATH)
cp $LEIN_BIN_SOURCE $LEIN_BIN_PATH
sed -i s/##LEIN_VERSION##/$LEIN_VERSION/ $LEIN_BIN_PATH

LEIN_PROFILES_SOURCE="$(dirname $0)/../opt/profiles.clj"
cp -n $LEIN_PROFILES_SOURCE "$BUILD_DIR/.lein"

# unpack existing cache
CACHE_REPOSITORY="$CACHE_DIR/.m2/"
LOCAL_REPOSITORY="$BUILD_DIR/.m2/"

if [ -d $CACHE_REPOSITORY ]; then
  cp -r -n $CACHE_REPOSITORY $LOCAL_REPOSITORY
fi

# Calculate build command
if [ -x $BUILD_DIR/bin/build ]; then
  BUILD_COMMAND=bin/build
else
  LEIN_BUILD_TASK=${LEIN_BUILD_TASK:-"with-profile production compile :all"}
  BUILD_COMMAND="lein $LEIN_BUILD_TASK"
fi

echo "-----> Building with $BUILD_COMMAND"

cd $BUILD_DIR
PATH=.lein/bin:/usr/local/bin:/usr/bin:/bin \
  LEIN_JVM_OPTS="-Xmx500m -Duser.home=$BUILD_DIR" \
  $BUILD_COMMAND 2>&1 | sed -u 's/^/       /'
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to install dependencies with Leiningen"
  exit 1
fi

# Clear unused jars
STALE_JARS=$(join --nocheck-order -v 1 <(find "$LOCAL_REPOSITORY" -name '*.jar' | sort) \
                       <(.lein/bin/lein classpath | tr : "\n" | sort))
# TODO: strip plugin jars from stale jars

for jar in $STALE_JARS; do
  rm -rf $(dirname "$jar")
done

# Repopulate cache
rm -rf $CACHE_REPOSITORY
cp -r $LOCAL_REPOSITORY $CACHE_REPOSITORY

# Local Variables:
# sh-basic-offset: 2
# End:
